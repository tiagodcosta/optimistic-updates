{"version":3,"sources":["data/mockup.js","components/App.js","index.js"],"names":["mockupData","id","message","answer","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","setState","prevState","updates","toConsumableArray","index","findIndex","update","errorMessage","mockupSaveRequest","then","catch","state","Promise","resolve","reject","randomNum","Math","floor","random","setTimeout","_this2","_this$state","react_default","a","createElement","className","map","key","onClick","PureComponent","rootElement","document","getElementById","ReactDOM","render","src_components_App"],"mappings":"mMAkBeA,EAlBI,CACjB,CACEC,GAAI,EACJC,QAAS,8BACTC,OAAQ,OAEV,CACEF,GAAI,EACJC,QAAS,yBACTC,OAAQ,OAEV,CACEF,GAAI,EACJC,QAAS,qBACTC,OAAQ,QC2EGC,qBApFb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAoBRQ,YAAc,SAACZ,EAAIE,GACjBG,EAAKQ,SACH,SAAAC,GACE,IACMC,EAAOT,OAAAU,EAAA,EAAAV,CAAOQ,EAAUC,SACxBE,EAAQF,EAAQG,UAAU,SAAAC,GAAM,OAAIA,EAAOnB,KAAOA,IAQxD,OANAe,EAAQE,GAAS,CACfjB,GAAIe,EAAQE,GAAOjB,GACnBC,QAASc,EAAQE,GAAOhB,QACxBC,OAAQA,GAGH,CAAEa,UAASK,aAVG,KAYvB,WACEf,EAAKgB,oBACFC,KAAK,cACLC,MAAM,WACLlB,EAAKQ,SAAS,SAAAC,GACZ,IACMC,EAAOT,OAAAU,EAAA,EAAAV,CAAOQ,EAAUC,SACxBE,EAAQF,EAAQG,UAAU,SAAAC,GAAM,OAAIA,EAAOnB,KAAOA,IAQxD,OANAe,EAAQE,GAAS,CACfjB,GAAIe,EAAQE,GAAOjB,GACnBC,QAASc,EAAQE,GAAOhB,QACxBC,OAAQ,OAGH,CAAEa,UAASK,aAVG,iDAvC/Bf,EAAKmB,MAAQ,CACXT,QAAShB,EACTqB,aAAc,IAJCf,mFASjB,OAAO,IAAIoB,QAAQ,SAACC,EAASC,GAC3B,IAAIC,EAAYC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IACtDE,WAAW,WACT,OAAkB,IAAdJ,EACKD,EAAO,cAEPD,EAAQ,YAEhB,wCAyCE,IAAAO,EAAAzB,KAAA0B,EAC2B1B,KAAKgB,MAA/BT,EADDmB,EACCnB,QAASK,EADVc,EACUd,aAErB,OACMe,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,sBACAH,EAAAC,EAAAC,cAAA,WAASC,UAAU,sBAClBvB,EAAQwB,IAAI,SAACpB,EAAQF,GACpB,OACEkB,EAAAC,EAAAC,cAAA,WAASC,UAAU,gBAAgBE,IAAKvB,EAAOjB,GAAImB,EAAOnB,IACxDmC,EAAAC,EAAAC,cAAA,eACEF,EAAAC,EAAAC,cAAA,SAAIlB,EAAOlB,SACXkC,EAAAC,EAAAC,cAAA,oBAAYlB,EAAOjB,SAErBiC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,yCAAyCG,QAAS,kBAAMR,EAAKrB,YAAYO,EAAOnB,GAAI,SAAtG,OACAmC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCG,QAAS,kBAAMR,EAAKrB,YAAYO,EAAOnB,GAAI,QAApG,SAINmC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBlB,YA9ErBsB,kBCAZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOZ,EAAAC,EAAAC,cAACW,EAAD,MAASL","file":"static/js/main.46a10d7c.chunk.js","sourcesContent":["const mockupData = [\n  {\n    id: 1,\n    message: \"Are you going to the beach?\",\n    answer: \"---\"\n  },\n  {\n    id: 2,\n    message: \"Do you like chocolate?\",\n    answer: \"---\"\n  },\n  {\n    id: 3,\n    message: \"Did you eat today?\",\n    answer: \"---\"\n  }\n];\n\nexport default mockupData;","import React, { PureComponent } from \"react\";\nimport mockupData from '../data/mockup';\nimport \"./App.css\";\n\nclass App extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      updates: mockupData,\n      errorMessage: \"\"\n    };\n  }\n\n  mockupSaveRequest() {\n    return new Promise((resolve, reject) => {\n      let randomNum = Math.floor(Math.random() * Math.floor(3));\n      setTimeout(() => {\n        if (randomNum === 1) {\n          return reject(\"Error here\");\n        } else {\n          return resolve(\"Success\");\n        }\n      }, 500);\n    });\n  }\n\n  handleClick = (id, answer) => {\n    this.setState(\n      prevState => {\n        const errorMessage = \"\";\n        const updates = [...prevState.updates];\n        const index = updates.findIndex(update => update.id === id);\n\n        updates[index] = {\n          id: updates[index].id,\n          message: updates[index].message,\n          answer: answer\n        };\n\n        return { updates, errorMessage };\n      },\n      () => {\n        this.mockupSaveRequest()\n          .then(() => {})\n          .catch(() => {\n            this.setState(prevState => {\n              const errorMessage = \"Sorry we could not send your answer :(\"\n              const updates = [...prevState.updates];\n              const index = updates.findIndex(update => update.id === id);\n\n              updates[index] = {\n                id: updates[index].id,\n                message: updates[index].message,\n                answer: '---'\n              };\n\n              return { updates, errorMessage };\n            });\n          });\n      }\n    );\n  };\n\n  render() {\n    const { updates, errorMessage } = this.state;\n\nreturn (\n      <section className=\"updates\">\n        <h1 className=\"updates__title\">Optimistic Updates</h1>\n        <section className=\"updates__container\">\n        {updates.map((update, index) => {\n          return (\n            <article className=\"updates__item\" key={index} id={update.id}>\n              <section>\n                <p>{update.message}</p>\n                <p>Answer: {update.answer}</p>\n              </section>\n              <button className=\"updates__button updates__button--green\" onClick={() => this.handleClick(update.id, 'yes')}>Yes</button>\n              <button className=\"updates__button updates__button--red\" onClick={() => this.handleClick(update.id, 'no')}>No</button>\n            </article>\n          );\n        })}\n        <p className=\"updates__error\">{errorMessage}</p>\n        </section>\n      </section>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}